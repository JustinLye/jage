# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: JAGE Build and Test

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        cpp_compiler: [g++, clang++]
        include:
          - cpp_compiler: g++
            c_compiler: gcc
            compiler_version: 14
          - cpp_compiler: clang++
            c_compiler: clang
            compiler_version: 18
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    - name: bootstrap
      run: scripts/bootstrap.sh
      env:
        MATRIX_C_COMPILER: ${{ matrix.c_compiler }}
        MATRIX_CPP_COMPILER: ${{ matrix.cpp_compiler }}
        MATRIX_COMPILER_VERSION: ${{ matrix.compiler_version }}
    - name: install conan
      run: |
        pushd ~
        python -m venv conan
        source conan/bin/activate
        pip install conan
    - name: configure conan
      run: |
        source ~/conan/bin/activate
        conan install . -pr:a profiles/linux -pr:a profiles/${{ matrix.c_compiler }} -pr:a profiles/release -pr:a profiles/asan -pr:a profiles/ubsan --build=missing
    - name: configure cmake
      run: |
        cmake --preset conan-build-linux-${{ matrix.c_compiler }}-release-asan-ubsan
    - name: all
      run: cmake --build build --target all
